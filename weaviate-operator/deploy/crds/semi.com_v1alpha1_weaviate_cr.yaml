apiVersion: semi.com/v1alpha1
kind: Weaviate
metadata:
  name: example-weaviate
spec:
  # Default values copied from <project_dir>/helm-charts/weaviate/values.yaml
  
  # Related to the weaviate image
  image:
    # registry where weaviate image is stored
    registry: docker.io/
    # Tag of weaviate image to deploy
    # Note: We strongly recommend you overwrite this value in your own values.yaml.
    # Otherwise a mere upgrade of the chart could lead to an unexpected upgrade
    # of weaviate. In accordance with Infra-as-code, you should pin this value
    # down and only change it if you explicitly want to upgrade the Weaviate
    # version.
    tag: 0.21.2
  
  # manually scale horizontal replicas of weaviate.
  # Also note: https://github.com/semi-technologies/weaviate/issues/725
  replicas: 1
  
  # Weaviate Config
  #
  # The following settings allow you to customize Weaviate to your needs, for
  # example set authentication and authorization optins. See weaviate docs
  # (https://www.semi.technology/documentation/weaviate/current/) for all
  # configuration.
  authentication:
    anonymous_access:
      enabled: true
  authorization:
    admin_list:
      enabled: false
  contextionary:
    tag: en0.8.0-v0.3.3
  query_defaults:
    limit: 100
  debug: false
  telemetry:
    disabled: true
  vector_index:
    # must be enabled since 0.20.x, there is no non-vector alternative anymore
    enabled: true
  
  # Sub Chart Overrides
  #
  # Weaviate uses sub-charts to manage its backing dependencies (Elatiscsearch,
  # Etcd, etc.). You can overwrite any of the values to scale the dependencies.
  # Keep in mind that databases are stateful and should be scaled carefully. In
  # critical scenarios, such as a production environment, we recommend to perform
  # backups before scaling databases.
  #
  # esvector (Vector-enabled Elasticsearch)
  esvector:
    clusterName: 'esvector'
    image: semitechnologies/esvector
    imageTag: 7.1.0
    # Scale up elasticsearch if you need more disk space or want to increase
    # performance.
    replicas: 3
  
  # Etcd
  #
  # Weaviate stores critical configuration where strong consistency is required
  # in etcd.
  etcd:
    fullnameOverride: etcd
    envVarsConfigMap: 'etcd-config'
    statefulset:
      replicaCount: 3
    ##
    auth:
      rbac:
        enabled: false
      client:
        ## Switch to encrypt client communication using TLS certificates
        secureTransport: false
        ## Switch to automatically create the TLS certificates
        useAutoTLS: false
        enableAuthentication: false
      peer:
        ## Switch to encrypt client communication using TLS certificates
        secureTransport: true
        ## Switch to automatically create the TLS certificates
        useAutoTLS: true
        ## Switch to enable host authentication using TLS certificates. Requires existing secret.
        enableAuthentication: false
    metrics:
      enabled: true
      podAnnotations:
        prometheus.io/scrape: 'true'
      prometheus.io/port: '2379'
    disasterRecovery:
      # If you set `enabled: true` you need to make sure that an NFS provisioner
      # runs in your cluster! See
      # https://github.com/bitnami/charts/tree/master/bitnami/etcd#disaster-recovery
      # Defaults to 'false' so the chart works without an NFS provisioner.
      # However, 'enabled: true' is strongly recommended!
      enabled: false
      cronjob:
        schedule: '*/30 * * * *'
        historyLimit: 1
        podAnnotations: {}
      pvc:
        size: 2Gi
        storageClassName: nfs
    startFromSnapshot:
      enabled: false
      ## Existingn PVC containing the etcd snapshot
      ##
      # existingClaim
      ## Snapshot filename
      ##
      # snapshotFilename
  
  # The service controls how weaviate is exposed to the outside world. If you
  # don't want a public load balancer, you can also choose 'ClusterIP' to make
  # weaviate only accessible within your cluster.
  service:
    name: weaviate
    type: LoadBalancer
  
  # currently unused or deprecated values. The following values are kept for
  # compatibility, but should not be customized.
  importer: false
  autoscaling:
    # we currently recommed not to use auto-scaling until
    # https://github.com/semi-technologies/weaviate/issues/725 has been fixed.
    # Instead scale manually and adhere to one of the workarounds outlined in the
    # issue.
    enabled: false
  cpuTargetPercentage: 70
  replicasMax: 5
  
